#!/bin/bash
#set -e
set -o pipefail

if [ -z $BUILD_NUMBER ]
then
        BUILD_NUMBER="0"
else
        BUILD_NUMBER=$1
fi

GIT_COMMIT=$2
PRE=$3
echo $PRE

#echo $GIT_COMMIT

#sed -i "s/BUILD/$BUILD_NUMBER/g" src/info.json

NAME=$(cat src/info.json | grep -Po '(?<="name": ")[^"]*')
CURRENTVERSION=$(cat src/info.json | grep -Po '(?<="version": ")[^"]*')

DIRNAME="${NAME}_${CURRENTVERSION}"

mkdir ${DIRNAME}

cp -r src/* ${DIRNAME}

if [ ! -d builds ]
then
        mkdir builds
fi
zip -r "builds/${DIRNAME}.zip" "${DIRNAME}" -x *.git* -x *build* -x *~

if [ ! -f "builds/${DIRNAME}.zip" ]
then
        echo "An error occurred. Exiting..." >&2
        exit 1
fi
rm -R ${DIRNAME}

export GITHUB_TOKEN=`cat /var/lib/jenkins/workspace/githubtoken.sh`

#git tag ${CURRENTVERSION} && git push --tags

if [ $PRE != "YES" ]
then
	github-release release \
	    --user DjSni \
	    --repo ${NAME} \
	    --tag ${CURRENTVERSION}-DEV \
	    --name "${DIRNAME}-DEV" \
	    --description "Automated Pre Build" \
	    --pre-release

	github-release upload \
	    --user DjSni \
	    --repo ${NAME} \
	    --tag ${CURRENTVERSION}-DEV \
	    --name "${DIRNAME}-DEV.zip" \
	    --file "builds/${DIRNAME}.zip"
else
	github-release release \
	    --user DjSni \
	    --repo ${NAME} \
	    --tag ${CURRENTVERSION} \
	    --name "${DIRNAME}" \
	    --description "Automated Build" 

	github-release upload \
	    --user DjSni \
	    --repo ${NAME} \
	    --tag ${CURRENTVERSION} \
	    --name "${DIRNAME}.zip" \
	    --file "builds/${DIRNAME}.zip"
fi
